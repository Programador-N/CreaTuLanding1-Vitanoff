Componentes de React:

Crear los componentes b√°sicos:
NavBar
CartWidget
ItemListContainer
Estructura de la Aplicaci√≥n:

Organizaci√≥n de los archivos dentro de la carpeta components.
Renderizar NavBar e ItemListContainer en el componente App.
Renderizar CartWidget dentro de NavBar.
Uso de Props:

Implementar props en ItemListContainer para enviar un mensaje de bienvenida.
Comprender la importancia de las props en la comunicaci√≥n entre componentes.
Barra de Navegaci√≥n:

Incluir enlaces de navegaci√≥n.
Agregar el logo de la tienda.
Incluir el widget del carrito de compras.
Estilos:

Considerar el uso de Bootstrap o librer√≠as de UI de React para los estilos (opcional).
Control de Versiones:

Realizar "commit" y "push" del proyecto a GitHub.
Asegurarse de que el nombre del repositorio siga el formato ‚ÄúCreaTuLanding1+Apellido‚Äù.
Documentaci√≥n:

Incluir un enlace al √∫ltimo commit en GitHub.
Criterios de Evaluaci√≥n:

Revisar los videos orientativos y criterios de evaluaci√≥n proporcionados para asegurarte de cumplir con las expectativas.
Aseg√∫rate de seguir cada uno de estos puntos para que tu pre-entregable est√© completo y bien estructurado. ¬°Buena suerte! üöÄ

los componente los importo desde app.js

Correcto, en React, los componentes se importan generalmente en el archivo App.js, que act√∫a como el componente principal de tu aplicaci√≥n. Aqu√≠ tienes un resumen de c√≥mo deber√≠as hacerlo:

Importar Componentes:

En tu archivo App.js, debes importar los componentes que has creado. Por ejemplo:
import NavBar from './components/NavBar';
import CartWidget from './components/CartWidget';
import ItemListContainer from './components/ItemListContainer';
Renderizar Componentes:

Una vez importados, puedes renderizarlos dentro del m√©todo render de tu componente App. Por ejemplo:
function App() {
  return (
    <div>
      <NavBar />
      <ItemListContainer message="¬°Bienvenido a nuestra tienda!" />
      <CartWidget />
    </div>
  );
}
Uso de Props:

Aseg√∫rate de pasar las props necesarias a los componentes, como en el caso de ItemListContainer, donde env√≠as un mensaje de bienvenida.
Estructura del Proyecto:

Aseg√∫rate de que la estructura de carpetas y archivos sea clara, con todos los componentes organizados dentro de la carpeta components.